name: Test

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
#    branches:
#      - main
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    permissions:
      # Set permissions for ${{ secrets.GITHUB_TOKEN }}
      # https://docs.github.com/en/actions/security-guides/automatic-token-authentication
      packages: read
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Run checkout github action
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: 'true'
          submodules: 'true'
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0

      - name: Install cocogitto
        uses: cocogitto/cocogitto-action@v3
        with:
          check: false

      - name: Unit test
        # Exclude Konsist unit tests which are actually lint checks
        # Build all unit tests so that jars are available for Sonar
        run: |
          ./gradlew assembleDebugUnitTest
          ./gradlew testDebugUnitTest -x konsist-test:testDebugUnitTest
          ./gradlew testBuildDebugUnitTest

      - name: Verify screenshots
        run: |
          ./gradlew verifyPaparazziDebug
          ./gradlew verifyPaparazziBuildDebug

      # Sonar analyzers must have access to the bytecode to perform an accurate analysis.
      # https://community.sonarsource.com/t/sonarscanner-for-gradle-you-can-now-decide-when-to-compile/102069
      - name: Upload build
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: unit-test-build
          include-hidden-files: true
          path: |
            **/build/**/*
            **/.gradle/**/*

      - name: Clean workspace
        if: ${{ always() }}
        uses: ./mobile-android-pipelines/actions/clean-workspace

  instrumentation-test:
    name: Instrumentation test
    runs-on: ubuntu-latest
    permissions:
      # Set permissions for ${{ secrets.GITHUB_TOKEN }}
      # https://docs.github.com/en/actions/security-guides/automatic-token-authentication
      packages: read
    steps:
      - name: Run checkout github action
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: 'true'
          submodules: 'true'
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0

      - name: Install cocogitto
        uses: cocogitto/cocogitto-action@v3
        with:
          check: false

      - name: Add avdmanager to path
        run: echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        shell: bash

      # https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
        shell: bash
        if: runner.os == 'Linux'

      - name: Instrumentation test
        run: |
          ./gradlew \
            allDevicesBuildDebugAndroidTest \
            allDevicesDebugAndroidTest
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload test coverage report
        uses: ./mobile-android-pipelines/actions/upload-coverage-reports
        with:
          artifact-name: instrumentation-test-coverage

      - name: Clean workspace
        if: ${{ always() }}
        uses: ./mobile-android-pipelines/actions/clean-workspace

  sonar-scan:
    name: Scan with Sonar
    runs-on: ubuntu-latest
    needs:
      - unit-test
      - instrumentation-test
    steps:
      - name: Run checkout github action
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: 'true'
          submodules: 'true'
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0

      - name: Install cocogitto
        uses: cocogitto/cocogitto-action@v3
        with:
          check: false

      - name: Download unit test build
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: unit-test-build

      - name: Download instrumentation test coverage reports
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: instrumentation-test-coverage

      - name: Scan with Sonar
        uses: ./mobile-android-pipelines/actions/sonar-scan
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean workspace
        if: ${{ always() }}
        uses: ./mobile-android-pipelines/actions/clean-workspace
